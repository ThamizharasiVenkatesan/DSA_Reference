Hello, This file content is originated from a Online course from youtube which is striver dsa, dsa sheet with 455 problems.
This is the first basic learnings that I took with me from the course.
It will be a straight forward hints with out any special explanation.
It will be associated with each program Iam solving.
Iam taking my first steps so do not laugh at me !

Language Used: C++
Basics: 
-----------------------------------------------------------------------
P1: User Input and Output 
 -The input arguments datatype be of different in each new testcase ,
  if that is so the input parameter datatype assigned in the function
  definition is advised to be char/str 
- TO FIND whether it is a alphabet use 
  if( ch>='A' && ch<= 'Z')
  if( ch>='a' && ch<= 'z')
  this will find whether the alphabet is between 'A','B';'a','b'.
-----------------------------------------------------------------------
P2: Data Types
- If the main function passes the input to the called function or 
  the called function has a default input value in its parameter 
  just use return statement , do not use cin and cout.
-----------------------------------------------------------------------
P3: If else statments
-----------------------------------------------------------------------
P4: Switch statements
- Common syntax
  Pi value to find area of a circle consider 10 significant digits.
  Pi= 3.141592653
-----------------------------------------------------------------------
P5: Arrays and Strings
- concept of how array works 
-----------------------------------------------------------------------
P6: For loops 
- Fibonacci logic 
* int fib(n)
    return fib(n-1)+fib(n-2);
* a,b=0,1
  for _ in range(2,n+1)
    a,b=b,a+b
  return b
Key learnings:
* ALways declare the sub function above the main function to 
  indicate the existence of the function to the compiler.
* Define function after the main function for the implementation.
* Do not write declaration and definition inside main()
-----------------------------------------------------------------------
P7: While loops
- Q: a number will be given, to find the sum of even digits in
  the given number and sum of odd digits of the same given number.
  logic used:
   x=n%10
   n=n/10
-----------------------------------------------------------------------
P8: Functions ( Pass by reference and value )
* Void functions do not return anything, it will give errors if you are 
  giving a retunr statement.
* Arguments passed will have a different varible name than that of the sub
  function's parameter variable name.
* Always use parameter of the sub function to perform actions inside the
  sub function
-----------------------------------------------------------------------
P9: Time complexity concept
******* Time Complexity != Time taken *******
Time Taken is the amount of time taken to run the program which is not the
time complexity of the program.

Time complexity is : The rate at which the time taken increases with respect
to the input size.

Big Oh O() notation - Worst case scenario
*  Always give Time complexity of worst case scenario for further scale up.
*  Avoid constants as it is not significant so neglect them.
* Avoid lower values and only take the first value as it also not significant.

- Big Oh O() - Upper bound, worst case 
- Theta 0 - Average complexity
- Omega - Lowest complexity

Time Complexity of nested loops 
N x N time complexity O(N²)

eg: for( int i=0; i<=N; i++)
       for ( int j=0; j<=N; j++)
             code

i th loop runs for N times, j th loop runs for N times which is N x N
O(N²)

eg: for( int i=0; i<= N; i++)
       for( int j=0; j<=i; j++)
            code

i th loop runs for N times , j th loop runs for i times which is N(N+1)/2
N²/2 + N/2
Neglect lower values , constants , we will be left with N²
O(N²)

P9: Space complexity
**********Memory Space***********
Big O - Worst case

Auxillary Space + Input Space 
(Space to solve) (Space to store)

* Never manipulate the input variables 

a,b //inputs
b=a+b // changes the input variable value which is not accepted
for MNC.
Take extra variable and it is fine.

""" Code 
 -> Sent to server 
 -> Competitve programming
 -> Most of the servers take 
      1s ~ 10⁸
      2s ~ 2 x 10⁸
      5s ~ 5 x 10⁸

Time limit 1s = 10⁸ operations
Roughly  TC = O( 10⁸ ) which is O(1).
-----------------------------------------------------------------------
P10: Patterns [ Service based company alone]
Uses loops , DSA 
Four steps:
[Nested loops], [Outer loops,rows], [inner loops,cols]
1) Outer loops, count the no. of lines
2) For inner loop, focus on columns, connect them to rows
3) Whatever you print, print them inside inner loop
4) Observe symmetry (optional)

eg:
* * * *
* * * *
* * * *
* * * *
i)    * * *    i<n
      * * *    j<n
      * * *
ii)   *        i<n
      * *      j<=i
      * * *
iii)  1        i<=n
      1 2      j<=i
      1 2 3    //give space separately in print statement, print j
iv)   1     
      2 2
      3 3 3    //print row number , cout << i
v)    





